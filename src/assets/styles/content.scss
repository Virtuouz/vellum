/*
  Keyboard Key Component (.kbd)
*/
.kbd {
  // --- Light Mode (Default) ---
  background-color: #f3f4f6;
  border: 1px solid #d1d5db;
  box-shadow: inset 0 -1px 0 #d1d5db;
  color: #374151;

  // --- Dark Mode ---
  .dark & {
    background-color: #2d3339;
    border-color: #4a5056;
    box-shadow: inset 0 -1px 0 #4a5056;
    color: #e0e0e0;
  }

  // --- Base Styles (Shared) ---
  border-bottom-width: 2px;
  border-radius: 5px;
  font-family: 'Fira Code', 'JetBrains Mono', 'Consolas', monospace;
  font-size: 0.9em;
  font-weight: 600;
  padding: 0.2em 0.5em;
  white-space: nowrap;
}

.cs-mainContent {
  margin-bottom: 20px;

  /* Headings with spacing to match your base. */
  h1 {
    font-size: 3rem;
    line-height: 1;
  }
  h2 {
    margin-top: 48px;
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
  h3 {
    margin-top: 32px;
    font-size: 2rem;
    line-height: 2.25rem;
  }
  h4 {
    margin-top: 32px;
    font-size: 1.75rem;
    line-height: 2rem;
  }
  h5 {
    margin-top: 28px;
    font-size: 1.5rem;
    line-height: 2rem;
  }
  h6 {
    margin-top: 24px;
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
 
  /* Paragraphs */
  p {
    margin-top: 12px;
  }

  /* Lists */
  ol,
  ul {
    margin-top: 8px;
    margin-bottom: 8px;
    padding-left: 32px;
  }
  ul > li {
    list-style-type: disc; /* Use 'disc' for a solid circle */
  }
  ol > li {
    list-style-type: decimal;
  }

  /* Links */
  a {
    color: var(--accent-primary);
    text-decoration: underline;
    transition: color 0.2s ease-in-out;
    word-break: break-word;
    white-space: normal;
    overflow-wrap: break-word
  }
  a:hover {
    color: var(--accent-hover);
  }
 
  /* Horizontal Rule */
  hr {
    margin: 48px 0;
    border: 0;
    border-top: 1px solid var(--border-primary);
  }

  /*
    Code Blocks & Inline Code
  */
  :not(pre) > code {
    background-color: var(--code-inline-background);
    color: var(--code-inline-text);
    padding: 0.2em 0.4em;
    border-radius: 6px;
    font-size: 0.875em;
  }

  pre {
    &:not([class*="language-"]){

    background-color: var(--code-block-background);
    }
    border: 1px solid var(--border-primary);
    border-radius: 8px;
    padding: 1.25rem;
    margin: 24px 0;
    overflow-x: auto;
    font-family: 'Fira Code', 'JetBrains Mono', 'Consolas', monospace;
    font-size: 0.9rem;
    line-height: 1.5;
  }

  /*
    Tables
  */
  table {
    width: 100%;
    border-collapse: collapse;
    margin: 24px 0;
    font-size: 0.95rem;
  }
  thead {
    border-bottom: 2px solid var(--accent-secondary);
    color: var(--text-primary);
  }
  th, td {
    padding: 12px 16px;
    text-align: left;
    border-bottom: 1px solid var(--border-primary);
  }
  tr:last-child td {
  }
  tr:nth-child(even) {
    background-color: var(--code-block-background); /* Using code-block for consistency */
  }
 
  /* Blockquotes */
  blockquote {
    margin: 24px 0;
    padding-left: 1.5rem;
    border-left: 4px solid var(--accent-secondary);
    opacity: 0.85;
    font-style: italic;
  }

/*
  Task List Styling
  For markdown-it-task-lists plugin output.
*/

// --- Container ---
// Removes default list styling.
.task-list-container {
  list-style: none;
  padding-left: 0;
  margin: 24px 0;
}

// --- List Item ---
.task-list-item {
  // Use flexbox for easy alignment of the checkbox and label.
  display: flex;
  align-items: center;
  margin-bottom: 8px;

  // The plugin wraps the input/label in a <p> tag, so we reset its margin.
  p {
    margin: 0;
    display: flex;
    align-items: center;
  }
}

// --- Checkbox ---
.task-list-item-checkbox {
  // Hide the default browser checkbox.
  opacity: 0;
  width: 0;
  height: 0;
  position: absolute;
}

// --- Label (Acts as the custom checkbox and text) ---
.task-list-item-label {
  position: relative;
  // Space for the custom checkbox.
  padding-left: 28px;
  cursor: default; // It's disabled, so no pointer.
  color: var(--text-primary);
  transition: color 0.2s ease-in-out;

  // --- Custom Checkbox Box (::before) ---
  &::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 18px;
    height: 18px;
    border: 2px solid var(--border-primary);
    border-radius: 4px;
    background-color: var(--background-surface);
    transition: border-color 0.2s ease-in-out, background-color 0.2s ease-in-out;
  }

  // --- Custom Checkmark (::after) ---
  // This is hidden by default and appears when the checkbox is checked.
  &::after {
    content: '';
    position: absolute;
    left: 6px;
    top: 50%;
    width: 6px;
    height: 10px;
    border: solid white;
    border-width: 0 2px 2px 0;
    // Start hidden and rotated.
    transform: translateY(-65%) rotate(45deg) scale(0);
    opacity: 0;
    transition: all 0.2s ease-in-out;
  }
}

// --- Checked State ---
// When the hidden checkbox is checked...
.task-list-item-checkbox:checked + .task-list-item-label {
  // Style the label text to look "completed".
  color: var(--text-muted);
  text-decoration: line-through;

  // Style the custom checkbox box to look "checked".
  &::before {
    background-color: var(--accent-primary);
    border-color: var(--accent-primary);
  }

  // Reveal the checkmark.
  &::after {
    transform: translateY(-65%) rotate(45deg) scale(1);
    opacity: 1;
  }
}

/*
  Tabs Component
*/
.tabs-tabs-wrapper {
  margin: 24px 0;
}

.tabs-tabs-header {
  display: flex;
  border-bottom: 1px solid var(--border-primary);
  flex-wrap: wrap;
}

.tabs-tab-button {
  background-color: transparent;
  border: none;
  border-bottom: 2px solid transparent;
  padding: 12px 16px;
  cursor: pointer;
  color: var(--text-muted);
  font-size: 0.95rem;
  font-weight: 500;
  margin-bottom: -1px;
  transition: color 0.2s ease-in-out, border-color 0.2s ease-in-out;

  &:hover {
    color: var(--text-primary);
  }

  &.active {
    color: var(--accent-primary);
    border-bottom-color: var(--accent-primary);
  }
}

.tabs-tabs-container {
  background-color: var(--code-block-background);
  border: 1px solid var(--border-primary);
  border-top: none;
  border-radius: 0 0 8px 8px;
  padding: 1.25rem;
}

.tabs-tab-content {
  display: none;

  &.active {
    display: block;
  }

  > :first-child {
    margin-top: 0;
  }
  > :last-child {
    margin-bottom: 0;
  }
}

/*
  Collapsible Component (details/summary)
  Refactored for better styling, nesting, and to avoid specificity issues.
*/
details {
  // --- Container Styling ---
  margin: 24px 0;
  background-color: var(--background-surface); // Use a consistent background for the whole component
  border: 1px solid var(--border-primary);
  border-radius: 8px;
  overflow: hidden; // Keeps child corners rounded

  // --- Nested Accordions ---
  // Style adjustments for accordions inside other accordions.
  details {
    margin: 16px 0 0; // Add top margin to separate from parent content
    background-color: transparent; // Inherit background from parent
    border: none; // Remove the outer boxy border
    border-top: 1px solid var(--border-primary); // Use a top line as a separator instead
    border-radius: 0; // No rounded corners for nested items
    padding-top: 16px; // Space between the separator line and the nested summary
  }
}

summary {
  // --- Header Styling ---
  display: block;
  padding: 12px 16px;
  cursor: pointer;
  color: var(--text-primary);
  font-size: 0.95rem;
  font-weight: 500;
  transition: background-color 0.2s ease-in-out;
  position: relative;

  // --- Remove Default Browser Marker ---
  &::-webkit-details-marker,
  &::marker {
    display: none;
    content: "";
  }

  &:hover {
    background-color: var(--interactive-hover);
  }
}

// --- NEW: Content Wrapper ---
// Your markdown processor should wrap the content inside <details> with this class.
// This is the key to fixing the style override issues.
.details-content {
  padding: 4px 16px 16px 16px; // Top padding is reduced for better balance

  // Resets spacing for a cleaner look inside the content area
  > :first-child {
    margin-top: 0;
  }
  > :last-child {
    margin-bottom: 0;
  }
}

// --- Custom Marker Styling ---
.details-marker {
  display: inline-block;
  margin-right: 8px;
  transform: rotate(0deg);
  transition: transform 0.3s ease-in-out;

  &::before {
    content: 'â€º';
    font-size: 1.5rem;
    line-height: 1;
    color: var(--text-muted);
  }
}

// --- Open State ---
details[open] {
  summary {
    // Make the header more prominent when open
    color: var(--accent-primary);
    
    // Add a subtle bottom border to cleanly separate it from the content
    box-shadow: inset 0 -1px 0 var(--border-primary);
  }

  .details-marker {
    // Rotate the chevron icon
    transform: rotate(90deg);
  }
}

/*
  Keyboard Key Component (.kbd)
*/
.kbd {
  // --- Light Mode (Default) ---
  background-color: #f3f4f6;
  border: 1px solid #d1d5db;
  box-shadow: inset 0 -1px 0 #d1d5db;
  color: #374151;

  // --- Dark Mode ---
  .dark & {
    background-color: #2d3339;
    border-color: #4a5056;
    box-shadow: inset 0 -1px 0 #4a5056;
    color: #e0e0e0;
  }

  // --- Base Styles (Shared) ---
  border-bottom-width: 2px;
  border-radius: 5px;
  font-family: 'Fira Code', 'JetBrains Mono', 'Consolas', monospace;
  font-size: 0.9em;
  font-weight: 600;
  padding: 0.2em 0.5em;
  white-space: nowrap;
}

/*
  Status Label Styling (.label)
*/
.label {
  // --- Base Styles (Shared) ---
  display: inline-block;
  padding: 0.2em 0.65em;
  border-radius: 9999px;
  vertical-align: middle;
  font-size: 0.85em;
  font-weight: 600;
  line-height: 1.4;
  white-space: nowrap;
}

// --- Light Mode Colors (Default) ---
.label.green {
  color: #166534;
  background-color: #dcfce7;
  .dark & {
    color: #66bb6a;
    background-color: rgba(76, 175, 80, 0.15);
  }
}
.label.blue {
  color: #1e40af;
  background-color: #dbeafe;
  .dark & {
    color: #5fb6e0;
    background-color: rgba(33, 150, 243, 0.15);
  }
}
.label.orange {
  color: #9a3412;
  background-color: #ffedd5;
  .dark & {
    color: #ffa726;
    background-color: rgba(255, 152, 0, 0.15);
  }
}
.label.red {
  color: #991b1b;
  background-color: #fee2e2;
  .dark & {
    color: #ef5350;
    background-color: rgba(244, 67, 54, 0.15);
  }
}


/*
  Custom Containers (info, warning, error)
*/
.info,
.warning,
.error {
  padding: 1rem 1.5rem;
  margin: 24px 0;
  border-radius: 8px;
  border-left: 4px solid;

  > :first-child {
    margin-top: 0;
    > :first-child {
      margin-top: 0;
    }
  }
  > :last-child {
    margin-bottom: 0;
  }


}

// --- Light Mode Colors (Default) ---
.info {
  border-color: #2196f3; /* Blue */
  background-color: #cedef3;
  .dark & {
    
    border-color: #2196f3; /* Blue */
    background-color: #111a24;
  }
}
.warning {
  border-color: #ff9800; /* Orange */
  background-color: #f0e9cc;
  .dark & {
    
    border-color: #ff9800; /* Orange */
    background-color: #221b0b;
  }
}
.error {
  border-color: #f44336; /* Red */
  background-color: #f0d5d5;
  .dark & {
    
    border-color: #f44336; /* Red */
    background-color: #241312;
  }
}

/*
  ULTree File Tree Styling
  For the markdown-it-ultree plugin.
*/

.ultree {
  // --- Container ---
  // Sets the background and overall container style.
  background-color: var(--code-block-background);
  border: 1px solid var(--border-primary);
  border-radius: 8px;
  padding: 1.25rem;
  margin: 24px 0;
  font-family: 'Fira Code', 'JetBrains Mono', 'Consolas', monospace;
  font-size: 0.9rem;

  // --- Reset Default List Styles ---
  ul {
    list-style: none;
    padding-left: 0;
    margin: 0;
  }

  li {
    position: relative;
  }
  ul > li {
   list-style: none; 
  }

  // --- Guide Lines ---
  // Creates the vertical and horizontal connector lines.
  ul ul {
    padding-left: 20px;
  }

  li::before {
    content: '';
    position: absolute;
    top: 0;
    left: -12px;
    width: 1px;
    height: 100%;
    background-color: var(--border-primary);
  }

  li:last-child::before {
    // The last item's vertical line should only go halfway down.
    height: 12px;
  }

  li::after {
    content: '';
    position: absolute;
    top: 12px;
    left: -12px;
    width: 12px;
    height: 1px;
    background-color: var(--border-primary);
  }

  // --- Summary (Folder/File Name) Styling ---
  summary {
    display: block; // Ensures it takes up full width
    cursor: pointer;
    padding: 2px 0;
    color: var(--text-primary);

    // Remove the default browser marker (arrow).
    &::-webkit-details-marker,
    &::marker {
      display: none;
      content: "";
    }

    // --- Custom Folder/File Marker ---
    &::before {
      display: inline-block;
      width: 1.2em;
      font-weight: bold;
      color: var(--text-muted);
      transition: transform 0.2s ease-in-out;
    }
  }

  details details{
    border-top: 0px solid var(--border-primary);
    padding-top: 0px;
    margin-top: 0px;
  }

  // --- Icon States for Details/Summary ---
  details {
    // Default state (closed folder icon)
    > summary::before {
      content: 'â–¸'; // Right-pointing triangle for closed state
    }
  }

  details[open] {
    // Open state (open folder icon)
    > summary::before {
      content: 'â–¾'; // Down-pointing triangle for open state
    }
  }

  // --- Final Adjustments ---
  // The very first list should not have any lines.
  > ul > li::before,
  > ul > li::after {
    display: none;
  }

  // Adjust summary spacing to align with the marker
  summary {
    padding-left: 4px;
  }
}


}

/* --- Responsive Heading Styles for Mobile --- */

@media (max-width: 768px) {
  .cs-mainContent {
    h1 {
      font-size: 2.25rem;
      line-height: 2.5rem;
    }
    h2 {
      font-size: 1.75rem;
      line-height: 2rem;
    }
    h3 {
      font-size: 1.5rem;
      line-height: 1.75rem;
    }
    h4 {
      font-size: 1.25rem;
      line-height: 1.5rem;
    }
    h5 {
      font-size: 1.125rem;
      line-height: 1.5rem;
    }
    h6 {
      font-size: 1rem;
      line-height: 1.5rem;
    }
  }
}
